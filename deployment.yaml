apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world-deployment
  namespace: test
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - hello-world
                topologyKey: "kubernetes.io/hostname"
      securityContext:
        runAsUser: 2000
        allowPrivilegeEscalation: false
      containers:
        - name: hello-world-container
          image: pvermeyden/nodejs-hello-world:a1e8cf1edcc04e6d905078aed9861807f6da0da4
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /health-check
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health-check
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - mountPath: /app/config/config.json
              name: config-volume
              subPath: config.json
          imagePullPolicy: Always
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      volumes:
        - name: config-volume
          configMap:
            name: json-configmap
      restartPolicy: Always
